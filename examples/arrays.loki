#load "print.loki"


// a: []int ->
	// a: struct {
	// 	cap: uint,
	// 	count: uint,
	// 	element_size: uint = 64,
	// 	data: [cap]int // int data[cap]
	// };
// array_add()
// array_delete(index)

// b: [10]int -> 
	// b: struct {
	// 	cap: uint Valuething in the system not a constant necesarily,
	// 	count: uint,
	// 	element_size: 64
	// 	data: [cap]int // int data[cap]
	// }

main :: () int {
    a := [3]int{1,2,3};

	// for (number: a) {
	// 	printf("num: %d\n", number);
	// }
	printf("a[0] = %d\n", a[0]);
    a[0] = 4;
	len := sizeof(a) / sizeof(int);
	printf("len is %d\n", len);
	i := 0;
	while (i < cast(len, u64)) {
		printf("num: %d\n", a[i]);
		i++;
	}
	printf("a[0] = %d\n", a[0]);
	printf("sizeof(a) = %d\n", sizeof(a)); // 3x4-byte integers = 12 bytes
}